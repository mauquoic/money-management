{
	"info": {
		"_postman_id": "01a4d130-7c50-4584-a328-b6669557c59b",
		"name": "MoneyManagement Blog and Development",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"User has correct information.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData.username).to.eql(\"Cédric Mauquoi\");",
							"    pm.expect(jsonData.email).to.eql(\"me@mail.com\");",
							"    pm.expect(jsonData.preferences.locale).to.eql(\"en_GB\");",
							"    pm.expect(jsonData.preferences.currency).to.eql(\"EUR\");",
							"    pm.expect(jsonData.preferences.darkMode).to.be.true;",
							"});",
							"pm.environment.set(\"user_id\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/me",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update preferences",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"locale\": \"en_US\",\n    \"currency\": \"CHF\",\n    \"darkMode\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/me/preferences",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"me",
						"preferences"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user with updated preferences",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Account has correct information.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"user_id\"));",
							"    pm.expect(jsonData.username).to.eql(\"Cédric Mauquoi\");",
							"    pm.expect(jsonData.email).to.eql(\"me@mail.com\");",
							"    pm.expect(jsonData.preferences.locale).to.eql(\"en_US\");",
							"    pm.expect(jsonData.preferences.currency).to.eql(\"CHF\");",
							"    pm.expect(jsonData.preferences.darkMode).to.be.false;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true,
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/me",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"me"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Account has correct information.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData.name).to.eql(\"MyFirstAccount\");",
							"    pm.expect(jsonData.description).to.eql(\"I am so proud to have my own money!!\");",
							"});",
							"pm.environment.set(\"account_id\", pm.response.json().id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"MyFirstAccount\",\n    \"balance\": 2200,\n    \"currency\": \"EUR\",\n    \"description\": \"I am so proud to have my own money!!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/accounts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"accounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var moment = require('moment');",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Account has correct information.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"account_id\"));",
							"    pm.expect(jsonData.name).to.eql(\"MyFirstAccount\");",
							"    pm.expect(jsonData.balance).to.eql(2200.0);",
							"    pm.expect(jsonData.currency).to.eql(\"EUR\");",
							"    pm.expect(jsonData.snapshots).to.be.undefined;",
							"    pm.expect(jsonData.description).to.eql(\"I am so proud to have my own money!!\");",
							"    pm.expect(jsonData.addedOn).to.eql(moment().format((\"YYYY-MM-DD\")));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/accounts/{{account_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"accounts",
						"{{account_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"balance\": 3000\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/accounts/{{account_id}}/update",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"accounts",
						"{{account_id}}",
						"update"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get account after update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var moment = require('moment');",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Account has correct information.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"account_id\"));",
							"    pm.expect(jsonData.name).to.eql(\"MyFirstAccount\");",
							"    pm.expect(jsonData.balance).to.eql(3000.0);",
							"    pm.expect(jsonData.currency).to.eql(\"EUR\");",
							"    pm.expect(jsonData.description).to.eql(\"I am so proud to have my own money!!\");",
							"    pm.expect(jsonData.addedOn).to.eql(moment().format((\"YYYY-MM-DD\")));",
							"    pm.expect(jsonData.snapshots.length).to.eql(1);",
							"    pm.expect(jsonData.snapshots[0].balance).to.eql(2200.0);",
							"    pm.expect(jsonData.snapshots[0].validFrom).to.eql(moment().format((\"YYYY-MM-DD\")));",
							"    pm.expect(jsonData.snapshots[0].validTo).to.eql(moment().format((\"YYYY-MM-DD\")));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/accounts/{{account_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"accounts",
						"{{account_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"MyFirstAccountEdited\",\n    \"balance\": 2300,\n    \"currency\": \"USD\",\n    \"description\": \"This has been edited\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/accounts/{{account_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"accounts",
						"{{account_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get account after edit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var moment = require('moment');",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Account has correct information.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"account_id\"));",
							"    pm.expect(jsonData.name).to.eql(\"MyFirstAccountEdited\");",
							"    pm.expect(jsonData.balance).to.eql(2300.0);",
							"    pm.expect(jsonData.currency).to.eql(\"USD\");",
							"    pm.expect(jsonData.description).to.eql(\"This has been edited\");",
							"    pm.expect(jsonData.addedOn).to.eql(moment().format((\"YYYY-MM-DD\")));",
							"    pm.expect(jsonData.snapshots.length).to.eql(1);",
							"    pm.expect(jsonData.snapshots[0].balance).to.eql(2200.0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/accounts/{{account_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"accounts",
						"{{account_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get inexisting acount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/accounts/bcbc853c-9ce6-4ef5-b660-7ecb4d497b7d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"accounts",
						"bcbc853c-9ce6-4ef5-b660-7ecb4d497b7d"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add second account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Account has correct information.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData.name).to.eql(\"MySecondAccount\");",
							"    pm.expect(jsonData.balance).to.eql(220);",
							"    pm.expect(jsonData.currency).to.eql(\"CHF\");",
							"    pm.expect(jsonData.description).to.be.null;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"MySecondAccount\",\n    \"balance\": 220,\n    \"currency\": \"CHF\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/accounts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"accounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get accounts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"pm.test(\"Exchange has currency information and stocks\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length).to.eql(2);",
							"    pm.expect(jsonData[0].id).to.eql(pm.environment.get(\"account_id\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/accounts",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"accounts"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}